{"version":3,"file":"static/js/982.150ec439.chunk.js","mappings":"+JACA,QAAuB,mBAAvB,EAAwD,0BAAxD,EAA0G,oCAA1G,EAAiL,+CAAjL,EAAsP,kCAAtP,EAA2T,+CAA3T,EAA2Y,6CAA3Y,EAAyd,6CAAzd,EAAsiB,4CAAtiB,EAAimB,2BAAjmB,EAAmpB,mCAAnpB,EAAmtB,yCAAntB,EAAkxB,kC,WCAlxB,QAA2B,2BAA3B,EAA0E,oCAA1E,EAA+I,iDAA/I,EAAuM,uBAAvM,EAAuP,yCAAvP,EAA+T,+CAA/T,EAAoY,sCAApY,EAA0c,gDAA1c,EAAgiB,sDAAhiB,EAA8lB,wBAA9lB,EAA+nB,yBAA/nB,EAA+rB,uDAA/rB,EAAmxB,6C,aCU5wB,MAAMA,EAA4BC,IAIlC,IAJmC,QACxCC,EAAO,iBACPC,EAAgB,cAChBC,GACDH,EACC,MAAM,QAAEI,EAAO,KAAEC,IAASC,EAAAA,EAAAA,YAAWC,EAAAA,IAC9BC,EAAUC,IAAeC,EAAAA,EAAAA,WAAS,IAClCC,EAAUC,IAAeF,EAAAA,EAAAA,UAAST,EAAQU,WAC1CE,EAAYC,IAAiBJ,EAAAA,EAAAA,UAASC,IACtCI,EAAWC,IAAgBN,EAAAA,EAAAA,UAASC,EAAWV,EAAQgB,gBAE9DC,EAAAA,EAAAA,YAAU,KACRf,GAAcgB,GAAaA,EAAYJ,IACvCb,GAAiBiB,GAAaA,EAAYR,GAAS,GAClD,KAEHO,EAAAA,EAAAA,YAAU,KACRf,GACEgB,GACEA,EAAYlB,EAAQgB,eAAiBN,EAAWV,EAAQU,WAC3D,GACA,CAACI,EAAWJ,KAEfO,EAAAA,EAAAA,YAAU,KACRhB,GAAiBiB,GAAaA,EAAYR,EAAWV,EAAQU,WAC7DK,EAAaL,EAAWV,EAAQgB,eAEhCb,GAAQgB,IACN,MAAMC,EAAUD,EAASE,KAAIC,GAC3BA,EAAKC,KAAOvB,EAAQuB,GAAK,IAAKD,EAAMZ,SAAUA,GAAaY,IAI7D,OADAE,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IACrCA,CAAO,GACd,GACD,CAACN,EAAWJ,IAEf,MA2BMkB,EAAaA,KACjBpB,GAAY,EAAK,EAenB,OACEqB,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAgBC,SAAA,EAC9BH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAyBC,SAAA,EACvCC,EAAAA,EAAAA,KAAA,OACEC,QAASA,IA/CIX,KACnB,MAAMY,EAAe/B,EAAKgC,MAAKd,GAAQA,EAAKC,KAAOA,IAEnDpB,GAAQkC,IACN,MAAMjB,EAAUiB,EAAKC,QAAOhB,GAAQA,EAAKC,KAAOA,IAGhD,OADAC,aAAaC,QAAQ,OAAQC,KAAKC,UAAUP,IACrCA,CAAO,IAGZe,IACFjC,GACEgB,GACEA,EAAYiB,EAAazB,SAAWyB,EAAanB,gBAErDf,GAAiBiB,GAAaA,EAAYiB,EAAazB,WACzD,EA+BqB6B,CAAYvC,EAAQuB,IACnCO,UAAS,GAAAU,OAAKT,EAAqC,KAAAS,OAAIT,GACvDU,IAAI,yBACJC,IAAI,kBAGNT,EAAAA,EAAAA,KAAA,OACEH,UAAWC,EACXU,IAAG,KAAAD,OAAOxC,EAAQ2C,OAAO,IACzBD,IAAI,mBAGNT,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAoCC,SAAEhC,EAAQuB,SAG9DM,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA2BC,SAAA,EACzCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAqCC,SAAA,EACnDC,EAAAA,EAAAA,KAAA,OACEC,QA9CaU,KACrBjC,GAAYO,GAAaA,EAAY,GAAE,EA8C/BY,UAAS,GAAAU,OAAKT,EAA0C,KAAAS,OAAIT,EAAa,KAAAS,OAAIT,GAAeC,UAE5FC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAaC,SAAC,SAG9BC,EAAAA,EAAAA,KAAA,OACEC,QAASN,EACTiB,cAAejB,EACfE,UAAWC,EAA2CC,SAErDzB,GACC0B,EAAAA,EAAAA,KAAA,SACEH,UAAWC,EACXe,MAAOlC,EACPmC,SAAUC,GAASnC,GAAemC,EAAMC,OAAOH,OAC/CI,KAAK,SACLC,IAAK,EACLC,UApDgBC,IACd,UAAVA,EAAEC,MACJ3C,EAAYC,GACZJ,GAAY,GACd,EAiDY+C,OA9CYC,KACxB7C,EAAYC,GACZJ,GAAY,EAAM,IA+CRE,KAIJuB,EAAAA,EAAAA,KAAA,OACEC,QArEauB,KACrB9C,GAAYO,GAA4B,IAAdA,EAAkB,EAAIA,EAAY,GAAG,EAqEvDY,UAAS,GAAAU,OAAKT,EAA0C,KAAAS,OAAIT,EAAa,KAAAS,OAAIT,GAAeC,UAE5FC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAaC,SAAC,YAIhCH,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAkCC,SAAA,CAAC,IAAElB,UAEnD,EC/IG4C,EAAiBA,KAC5B,MAAM,KAAEtD,EAAI,QAAED,IAAYE,EAAAA,EAAAA,YAAWC,EAAAA,IAC9BqD,EAAYzD,IAAiBO,EAAAA,EAAAA,UAAS,IACtCmD,EAAe3D,IAAoBQ,EAAAA,EAAAA,UAAS,GAC7CoD,GAAYC,EAAAA,EAAAA,QAA0B,MAEtCC,EAAoBA,KAAO,IAADC,EACb,QAAjBA,EAAAH,EAAUI,eAAO,IAAAD,GAAjBA,EAAmBE,OAAO,EAmB5B,OACErC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAAYC,SAAA,EAC1BC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAAmBC,SAAC,UAEnCC,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,EAA6BC,SAC1C5B,EAAK+D,OAAS,EACb/D,EAAKiB,KAAIrB,IAELiC,EAAAA,EAAAA,KAACnC,EAAQ,CAEPI,cAAeA,EACfD,iBAAkBA,EAClBD,QAASA,GAHJA,EAAQuB,OAQnBU,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAwCC,SAAC,yBAM1D5B,EAAK+D,OAAS,IACbtC,EAAAA,EAAAA,MAAA,OAAKC,UAAWC,EAA2BC,SAAA,EACzCC,EAAAA,EAAAA,KAAA,KAAGH,UAAWC,EAAwCC,SAAA,IAAAQ,OAC/CmB,MAGP1B,EAAAA,EAAAA,KAAA,KACEH,UAAWC,EAAsCC,SAAA,aAAAQ,OACpCoB,EAAa,aAE5B3B,EAAAA,EAAAA,KAAA,OAAKH,UAAWC,KAEhBE,EAAAA,EAAAA,KAAA,OACEC,QApDakC,KAAO,IAADC,EACV,QAAjBA,EAAAR,EAAUI,eAAO,IAAAI,GAAjBA,EAAmBC,WAAW,EAoDtBxC,UAAWC,EAAqCC,SACjD,iBAMLH,EAAAA,EAAAA,MAAA,UAAQC,UAAWC,EAAqBwC,IAAKV,EAAU7B,SAAA,EACrDC,EAAAA,EAAAA,KAAA,UACEH,UAAWC,EACXG,QAAS6B,EAAkB/B,SAC5B,WAIDC,EAAAA,EAAAA,KAAA,MAAIH,UAAWC,EAA2BC,SAAC,qEAI3CC,EAAAA,EAAAA,KAAA,UACEC,QArEgBsC,KACtBrE,EAAQ,IACRD,EAAc,GACdD,EAAiB,GACjB8D,IAEA,MAAMU,EAAgBC,SAASC,eAAe,UAC1CF,GACFA,EAAcG,eAAe,CAAEC,SAAU,UAC3C,EA6DM/C,UAAWC,EAA4BC,SACxC,aAIDC,EAAAA,EAAAA,KAAA,UACEC,QAAS6B,EACTjC,UAAWC,EAA4BC,SACxC,gBAIC,C","sources":["webpack://react_phone-catalog/./src/components/cart/Cart.module.scss?d93d","webpack://react_phone-catalog/./src/components/cart/cartCard/CardCart.module.scss?c71a","components/cart/cartCard/CartCard.tsx","components/cart/Cart.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"cart\":\"Cart_cart__ompxi\",\"cart__title\":\"Cart_cart__title__X9quN\",\"cart__items_container\":\"Cart_cart__items_container__9OC5v\",\"cart__items_container__paragraph\":\"Cart_cart__items_container__paragraph__Dl+pJ\",\"cart__sum_container\":\"Cart_cart__sum_container__cs1dF\",\"cart__sum_container__total_price\":\"Cart_cart__sum_container__total_price__FzB57\",\"cart__sum_container__paragraph\":\"Cart_cart__sum_container__paragraph__SZDBn\",\"cart__sum_container__separator\":\"Cart_cart__sum_container__separator__bW8D-\",\"cart__sum_container__checkout\":\"Cart_cart__sum_container__checkout__BaIIl\",\"cart__dialog\":\"Cart_cart__dialog__80P8B\",\"cart__dialog__button\":\"Cart_cart__dialog__button__a2s1X\",\"cart__dialog__button_close\":\"Cart_cart__dialog__button_close__vlmlX\",\"cart__dialog__title\":\"Cart_cart__dialog__title__TxcG3\"};","// extracted by mini-css-extract-plugin\nexport default {\"cartCard\":\"CardCart_cartCard__bV8+b\",\"cartCard__product\":\"CardCart_cartCard__product__34E0G\",\"cartCard__product__closeButton\":\"CardCart_cartCard__product__closeButton__wRdRQ\",\"spin\":\"CardCart_spin__JScZi\",\"cartCard__product__img\":\"CardCart_cartCard__product__img__BEZ6-\",\"cartCard__product__paragraph\":\"CardCart_cartCard__product__paragraph__UZdFq\",\"cartCard__container\":\"CardCart_cartCard__container__saDBP\",\"cartCard__container__quantity\":\"CardCart_cartCard__container__quantity__bW-Z8\",\"cartCard__container__quantity__item\":\"CardCart_cartCard__container__quantity__item__zUPKc\",\"scale\":\"CardCart_scale__VMj6j\",\"border\":\"CardCart_border__z0Z2s\",\"cartCard__container__quantity__input\":\"CardCart_cartCard__container__quantity__input__s+FrX\",\"cartCard__container__price\":\"CardCart_cartCard__container__price__Q8yRb\"};","import { useContext, useEffect, useState } from 'react';\nimport Styles from './CardCart.module.scss';\nimport { ContextApp } from '../../../appContext/AppContext';\nimport { ItemWithQuantity } from '../../../types/ItemWithQuantity';\n\ntype Props = {\n  product: ItemWithQuantity;\n  setTotalPrice: React.Dispatch<React.SetStateAction<number>>;\n  setTotalQuantity: React.Dispatch<React.SetStateAction<number>>;\n};\n\nexport const CartCard: React.FC<Props> = ({\n  product,\n  setTotalQuantity,\n  setTotalPrice,\n}) => {\n  const { setCart, cart } = useContext(ContextApp);\n  const [isEdited, setIsEdited] = useState(false);\n  const [quantity, setQuantity] = useState(product.quantity);\n  const [inputValue, setInputValue] = useState(quantity);\n  const [cardPrice, setCardPrice] = useState(quantity * product.priceDiscount);\n\n  useEffect(() => {\n    setTotalPrice(prevState => prevState + cardPrice);\n    setTotalQuantity(prevState => prevState + quantity);\n  }, []);\n\n  useEffect(() => {\n    setTotalPrice(\n      prevState =>\n        prevState + product.priceDiscount * (quantity - product.quantity),\n    );\n  }, [cardPrice, quantity]);\n\n  useEffect(() => {\n    setTotalQuantity(prevState => prevState + quantity - product.quantity);\n    setCardPrice(quantity * product.priceDiscount);\n\n    setCart(prevCart => {\n      const newCart = prevCart.map(item =>\n        item.id === product.id ? { ...item, quantity: quantity } : item,\n      );\n\n      localStorage.setItem('cart', JSON.stringify(newCart));\n      return newCart;\n    });\n  }, [cardPrice, quantity]);\n\n  const handleClose = (id: string) => {\n    const itemToRemove = cart.find(item => item.id === id);\n\n    setCart(prev => {\n      const newCart = prev.filter(item => item.id !== id);\n\n      localStorage.setItem('cart', JSON.stringify(newCart));\n      return newCart;\n    });\n\n    if (itemToRemove) {\n      setTotalPrice(\n        prevState =>\n          prevState - itemToRemove.quantity * itemToRemove.priceDiscount,\n      );\n      setTotalQuantity(prevState => prevState - itemToRemove.quantity);\n    }\n  };\n\n  const handleIncrease = () => {\n    setQuantity(prevState => prevState + 1);\n  };\n\n  const handleDecrease = () => {\n    setQuantity(prevState => (prevState === 1 ? 1 : prevState - 1));\n  };\n\n  const handleEdit = () => {\n    setIsEdited(true);\n  };\n\n  const handleKeyDownOnInput = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      setQuantity(inputValue);\n      setIsEdited(false);\n    }\n  };\n\n  const handleBlurOnInput = () => {\n    setQuantity(inputValue);\n    setIsEdited(false);\n  };\n\n  return (\n    <div className={Styles.cartCard}>\n      <div className={Styles.cartCard__product}>\n        <img\n          onClick={() => handleClose(product.id)}\n          className={`${Styles.cartCard__product__closeButton} ${Styles.spin}`}\n          src=\".\\img\\svg\\close.svg\"\n          alt=\"close button\"\n        />\n\n        <img\n          className={Styles.cartCard__product__img}\n          src={`./${product.images[0]}`}\n          alt=\"product image\"\n        />\n\n        <p className={Styles.cartCard__product__paragraph}>{product.id}</p>\n      </div>\n\n      <div className={Styles.cartCard__container}>\n        <div className={Styles.cartCard__container__quantity}>\n          <div\n            onClick={handleIncrease}\n            className={`${Styles.cartCard__container__quantity__item} ${Styles.border} ${Styles.scale}`}\n          >\n            <p className={Styles.scale}>+</p>\n          </div>\n\n          <div\n            onClick={handleEdit}\n            onDoubleClick={handleEdit}\n            className={Styles.cartCard__container__quantity__item}\n          >\n            {isEdited ? (\n              <input\n                className={Styles.cartCard__container__quantity__input}\n                value={inputValue}\n                onChange={event => setInputValue(+event.target.value)}\n                type=\"number\"\n                min={1}\n                onKeyDown={handleKeyDownOnInput}\n                onBlur={handleBlurOnInput}\n              />\n            ) : (\n              quantity\n            )}\n          </div>\n\n          <div\n            onClick={handleDecrease}\n            className={`${Styles.cartCard__container__quantity__item} ${Styles.border} ${Styles.scale}`}\n          >\n            <p className={Styles.scale}>-</p>\n          </div>\n        </div>\n\n        <div className={Styles.cartCard__container__price}>${cardPrice}</div>\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useRef, useState } from 'react';\nimport Styles from './Cart.module.scss';\nimport { ContextApp } from '../../appContext/AppContext';\nimport { CartCard } from './cartCard';\nimport { ItemWithQuantity } from '../../types/ItemWithQuantity';\n\nexport const Cart: React.FC = () => {\n  const { cart, setCart } = useContext(ContextApp);\n  const [totalPrice, setTotalPrice] = useState(0);\n  const [totalQuantity, setTotalQuantity] = useState(0);\n  const dialogRef = useRef<HTMLDialogElement>(null);\n\n  const handleCloseDialog = () => {\n    dialogRef.current?.close();\n  };\n\n  const handleCheckout = () => {\n    dialogRef.current?.showModal();\n  };\n\n  const handleClearCart = () => {\n    setCart([]);\n    setTotalPrice(0);\n    setTotalQuantity(0);\n    handleCloseDialog();\n\n    const headerElement = document.getElementById('header');\n    if (headerElement) {\n      headerElement.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className={Styles.cart}>\n      <h1 className={Styles.cart__title}>Cart</h1>\n\n      <div className={Styles.cart__items_container}>\n        {cart.length > 0 ? (\n          cart.map(product => {\n            return (\n              <CartCard\n                key={product.id}\n                setTotalPrice={setTotalPrice}\n                setTotalQuantity={setTotalQuantity}\n                product={product as ItemWithQuantity}\n              />\n            );\n          })\n        ) : (\n          <p className={Styles.cart__items_container__paragraph}>\n            Your cart is empty\n          </p>\n        )}\n      </div>\n\n      {cart.length > 0 && (\n        <div className={Styles.cart__sum_container}>\n          <p className={Styles.cart__sum_container__total_price}>\n            {`$${totalPrice}`}\n          </p>\n\n          <p\n            className={Styles.cart__sum_container__paragraph}\n          >{`Total for ${totalQuantity} items`}</p>\n\n          <div className={Styles.cart__sum_container__separator}></div>\n\n          <div\n            onClick={handleCheckout}\n            className={Styles.cart__sum_container__checkout}\n          >\n            Checkout\n          </div>\n        </div>\n      )}\n\n      <dialog className={Styles.cart__dialog} ref={dialogRef}>\n        <button\n          className={Styles.cart__dialog__button_close}\n          onClick={handleCloseDialog}\n        >\n          Close\n        </button>\n\n        <h1 className={Styles.cart__dialog__title}>\n          Checkout is not implemented yet. Do you want to clear the Cart?\n        </h1>\n\n        <button\n          onClick={handleClearCart}\n          className={Styles.cart__dialog__button}\n        >\n          Confirm\n        </button>\n\n        <button\n          onClick={handleCloseDialog}\n          className={Styles.cart__dialog__button}\n        >\n          Cancel\n        </button>\n      </dialog>\n    </div>\n  );\n};\n"],"names":["CartCard","_ref","product","setTotalQuantity","setTotalPrice","setCart","cart","useContext","ContextApp","isEdited","setIsEdited","useState","quantity","setQuantity","inputValue","setInputValue","cardPrice","setCardPrice","priceDiscount","useEffect","prevState","prevCart","newCart","map","item","id","localStorage","setItem","JSON","stringify","handleEdit","_jsxs","className","Styles","children","_jsx","onClick","itemToRemove","find","prev","filter","handleClose","concat","src","alt","images","handleIncrease","onDoubleClick","value","onChange","event","target","type","min","onKeyDown","e","key","onBlur","handleBlurOnInput","handleDecrease","Cart","totalPrice","totalQuantity","dialogRef","useRef","handleCloseDialog","_dialogRef$current","current","close","length","handleCheckout","_dialogRef$current2","showModal","ref","handleClearCart","headerElement","document","getElementById","scrollIntoView","behavior"],"sourceRoot":""}